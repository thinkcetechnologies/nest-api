generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
    id Int @id @default(autoincrement())
    createAt DateTime @default(now())
    email String @unique
    username String @unique
    password String
    firstName String?
    lastName String?

    auth_logs AuthLog[]
    company Company[]
    branch Branch[]
    employee Employee[]
    employee_role EmployeeRole[]
    user_role UserRole[]
    @@map("users")
}

model AuthLog {
    Id Int @id @default(autoincrement())
    loginAt DateTime @default(now())

    user_id Int
    user User @relation(fields: [user_id], references: [id])

    @@map("auth_logs")
}

model Company{
    Id Int @id @default(autoincrement())
    company_name String
    location String
    branches Int
    type String
    company_size Int
    company_address String

    user_id Int
    user User @relation(fields: [user_id], references: [id])

    branch Branch[]
    employee Employee[]

    @@map("company")
}

model Branch{
    id Int @id @default(autoincrement())
    name String
    location String

    company_id Int
    user_id Int

    user User @relation(fields: [user_id], references: [id])

    company Company @relation(fields: [company_id], references: [Id])

    employee Employee[]
    @@map("branch")
}

model Employee{
    id Int @id @default(autoincrement())
    firstName String
    lastName String
    contact String?
    email String

    company_id Int
    user_id Int
    branch_id Int

    company Company @relation(fields: [company_id], references: [Id])

    user User @relation(fields: [user_id], references: [id])

    branch Branch @relation(fields: [branch_id], references: [id])

    employee_role EmployeeRole[]
    employee_user EmployeeUser[]
    @@map("employee")
}

model Role{
    id Int @id @default(autoincrement())
    name String
    code Int

    employee_role EmployeeRole[]
    user UserRole[]
    @@map("role")
}

model EmployeeRole{
    id Int @id @default(autoincrement())

    employee_id Int

    role_id Int

    user_id Int

    employee Employee @relation(fields: [employee_id], references: [id])

    role Role @relation(fields: [role_id], references: [id])

    user User @relation(fields: [user_id], references: [id])

    @@map("employee_role")
}

model UserRole{
    id Int @id @default(autoincrement())

    uid Int

    role_id Int

    user_id Int

    role Role @relation(fields: [role_id], references: [id])

    user User @relation(fields: [user_id], references: [id])

    @@map("user_role")
}

model EmployeeUser{
    id Int @id @default(autoincrement())
    username String
    password String

    employee_id Int

    employee Employee @relation(fields: [employee_id], references: [id])

    @@map("employee_user")
}